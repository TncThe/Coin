{"version":3,"file":"highlight.d.ts","sources":["highlight.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnChanges, SimpleChanges, EventEmitter, NgZone } from '@angular/core';\r\nimport { HighlightJS } from './highlight.service';\r\nimport { HighlightResult } from './highlight.model';\r\nexport declare class Highlight implements OnChanges {\r\n    private _hljs;\r\n    private _zone;\r\n    /** Highlighted Code */\r\n    highlightedCode: string;\r\n    /** An optional array of language names and aliases restricting detection to only those languages.\r\n     * The subset can also be set with configure, but the local parameter overrides the option if set.\r\n     */\r\n    languages: string[];\r\n    /** Highlight code input */\r\n    code: any;\r\n    /** Stream that emits when code string is highlighted */\r\n    highlighted: EventEmitter<HighlightResult>;\r\n    constructor(_hljs: HighlightJS, _zone: NgZone);\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    /**\r\n     * Highlighting with language detection and fix markup.\r\n     * @param value Accepts a string with the code to highlight\r\n     * @param languageSubset An optional array of language names and aliases restricting detection to only those languages.\r\n     * The subset can also be set with configure, but the local parameter overrides the option if set.\r\n     */\r\n    highlightElement(code: string, languages?: string[]): void;\r\n}\r\n"]}